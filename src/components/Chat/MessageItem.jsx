import React, { useState } from "react";
import { formatMessageTime } from "../../utils/formatMessageTime";
import { PhotoView } from "react-photo-view";
import { ContextMenuTrigger, ContextMenu, MenuItem } from "react-contextmenu";
import './Chat.css';
import { MdOutlineReportGmailerrorred } from "react-icons/md";
import { MdContentCopy } from "react-icons/md";
import { showToast } from "../../services/toastService";
import { log } from "../../utils/logger";

export default function MessageItem({ message, store, openModalReport, disableContextMenu }) {
  const [selectedMessage, setSelectedMessage] = useState(null);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–ª–∏–∫–æ–≤ –ø–æ –ø—É–Ω–∫—Ç–∞–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
  const handleItemClick = (e, data) => {
    const { action } = data;
    switch (action) {
      case "copy":
        showToast({
          text1: "–°–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ.",
          type: "success",
        });
        break;
      case "report":
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
        openModalReport(selectedMessage);
        break;
      default:
        log("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞:", action);
    }
  };

  return (
    <div>
      {/* –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ */}
      {!disableContextMenu && (
        <ContextMenuTrigger id={`context-menu-${message._id}`} collect={() => setSelectedMessage(message)}>
          <div
            key={message._id}
            className={`chat ${message.senderId === store.user?.id ? "chat-end" : "chat-start"}`}
          >
            {message.senderId === store.user?.id && (
              <div className="message-time-container">
                <time className="message-time">
                  {formatMessageTime(message.createdAt)}
                </time>
              </div>
            )}

            {(message.image || message.text) && (
              <div className="chat-bubble">
                {message.image && (
                  <PhotoView src={message.image}>
                    <img src={message.image} className="message-image" alt="Sent" />
                  </PhotoView>
                )}
                {message.text && <p>{message.text}</p>}
              </div>
            )}

            {message.senderId !== store.user?.id && (
              <div className="message-time-container">
                <time className="message-time">
                  {formatMessageTime(message.createdAt)}
                </time>
              </div>
            )}
          </div>
        </ContextMenuTrigger>
      )}

      {/* –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ, —Ç–æ –æ–Ω–æ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è */}
      {!disableContextMenu && (
        <ContextMenu id={`context-menu-${message._id}`}>
          <div className="context-menu-header">
            {message.image ? (
              <img src={message.image} alt="Message thumbnail" className="context-menu-thumbnail" />
            ) : (
              <div className="context-menu-thumbnail-placeholder">üìÑ</div>
            )}
            <span className="context-menu-message-text">{message.text ? message.text.slice(0, 20) : "–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞"}</span>
          </div>
          <MenuItem data={{ action: "copy" }} onClick={handleItemClick}>
          <div className="actions-context-menu">
            <MdContentCopy size={20} style={{ marginRight: "5px" }} />
            <p>–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å</p>
          </div>
          </MenuItem>
          {message.senderId !== store.user?.id && (
            <MenuItem data={{ action: "report" }} onClick={handleItemClick}>
              <div className="actions-context-menu">
                <MdOutlineReportGmailerrorred size={20} style={{ marginRight: "5px" }} /> 
                <p>–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è</p>
              </div>
            </MenuItem>
          )}
        </ContextMenu>
      )}

      {/* –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –æ—Ç–∫–ª—é—á–µ–Ω–æ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */}
      {disableContextMenu && (
        <div
          key={message._id}
          className={`chat ${message.senderId === store.user?.id ? "chat-end" : "chat-start"}`}
        >
          {(message.image || message.text) && (
            <div className="chat-bubble">
              {message.image && (
                <PhotoView src={message.image}>
                  <img src={message.image} className="message-image" alt="Sent" />
                </PhotoView>
              )}
              {message.text && <p>{message.text}</p>}
            </div>
          )}
        </div>
      )}
    </div>
  );
}